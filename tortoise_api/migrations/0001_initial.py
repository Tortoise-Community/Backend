# Generated by Django 3.0.7 on 2020-12-16 20:51

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import utils.misc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guild',
            fields=[
                ('id', utils.misc.DiscordIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('suggestion_message_id', utils.misc.DiscordIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mod_mail', models.BooleanField(default=False)),
                ('member', models.BooleanField(default=False)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('leave_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='tortoise_api.Guild')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', utils.misc.DiscordIDField(primary_key=True, serialize=False)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='tortoise_api.Guild')),
            ],
            options={
                'unique_together': {('id', 'guild')},
            },
        ),
        migrations.CreateModel(
            name='SelfAssignableCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_assignable_categories', to='tortoise_api.Guild')),
            ],
            options={
                'unique_together': {('name', 'guild')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', utils.misc.DiscordIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('tag', models.CharField(max_length=6)),
                ('avatar', models.URLField(blank=True, default='https://cdn.discordapp.com/embed/avatars/4.png', max_length=150)),
                ('email', models.CharField(blank=True, default='', max_length=50)),
                ('verified', models.BooleanField(default=False)),
                ('perks', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('message_id', utils.misc.DiscordIDField(primary_key=True, serialize=False)),
                ('brief', models.CharField(max_length=2000)),
                ('status', models.CharField(choices=[('R', 'Under Review'), ('A', 'Approved'), ('D', 'Denied')], default='R', max_length=20)),
                ('reason', models.CharField(blank=True, default='No reason specified.', max_length=2000)),
                ('link', models.URLField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='tortoise_api.Member')),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='tortoise_api.Guild')),
            ],
        ),
        migrations.CreateModel(
            name='Strike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ads', models.PositiveSmallIntegerField(default=0)),
                ('spam', models.PositiveSmallIntegerField(default=0)),
                ('bad_words', models.PositiveSmallIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strikes', to='tortoise_api.User')),
            ],
        ),
        migrations.CreateModel(
            name='MemberWarning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warnings', to='tortoise_api.Member')),
                ('moderator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_warnings', to='tortoise_api.Member')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='roles',
            field=models.ManyToManyField(blank=True, to='tortoise_api.Role'),
        ),
        migrations.AddField(
            model_name='member',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tortoise_api.User'),
        ),
        migrations.CreateModel(
            name='Infraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SM', 'Short Mute'), ('LM', 'Long Temporary Mute'), ('SK', 'Kick'), ('SB', 'Short Temporary Ban'), ('LB', 'Long Temporary Ban'), ('PB', 'Permanent Ban')], default='SM', max_length=30)),
                ('revoke_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='infractions', to='tortoise_api.Member')),
            ],
        ),
        migrations.CreateModel(
            name='GuildOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_submission', models.BooleanField(default=False)),
                ('bug_report', models.BooleanField(default=False)),
                ('mod_mail', models.BooleanField(default=False)),
                ('suggestions', models.BooleanField(default=False)),
                ('guild', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='tortoise_api.Guild')),
            ],
        ),
        migrations.CreateModel(
            name='GuildChannels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('verification_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('rules_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('roles_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('bot_log_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('member_log_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('update_log_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('deterrence_log_channel_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('guild', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='tortoise_api.Guild')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('guilds', models.ManyToManyField(to='tortoise_api.Guild')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tortoise_api.User')),
            ],
        ),
        migrations.CreateModel(
            name='SelfAssignableRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji_id', utils.misc.DiscordIDField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_assignable_roles', to='tortoise_api.SelfAssignableCategory')),
                ('role', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tortoise_api.Role')),
            ],
            options={
                'unique_together': {('role', 'emoji_id'), ('order', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True)),
                ('name', models.CharField(max_length=20)),
                ('statement', models.TextField()),
                ('alias', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=utils.misc.empty_array, size=None)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='tortoise_api.Guild')),
            ],
            options={
                'unique_together': {('number', 'guild')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('user', 'guild')},
        ),
    ]
